apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-android-extensions'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "org.brainail.EverboxingLingo"

        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }
     sourceSets {
         main.java.srcDirs += 'src/main/kotlin'
         test.java.srcDirs += 'src/test/kotlin'
     }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"

    implementation "androidx.core:core-ktx:$androidKtxVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation "android.arch.lifecycle:runtime:$androidArchVersion"
    implementation "android.arch.lifecycle:extensions:$androidArchVersion"
    kapt "android.arch.lifecycle:compiler:$androidArchVersion"

    implementation "org.jetbrains.anko:anko-common:$ankoCommonVersion"
    implementation "com.dmitrymalkovich.android:material-design-dimens:$materialDimensVersion"
    kapt "com.android.databinding:compiler:$gradlePluginVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "nz.bradcampbell:paperparcel:$paperparcelVersion"
    kapt "nz.bradcampbell:paperparcel-compiler:$paperparcelVersion"

    implementation "com.ashokvarma.android:bottom-navigation-bar:$bottomNavigationVersion"

    implementation project(':domain')
    implementation project(':data')
    implementation project(':cache')
    implementation project(':remote')

    implementation project(':logger')
    implementation project(':flysearch')

    // TODO: KTX <-> https://medium.com/exploring-android/exploring-ktx-for-android-13a369795b51

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation "org.jetbrains.spek:spek-api:$spekVersion"
    testImplementation "org.jetbrains.spek:spek-data-driven-extension:$spekVersion"
    testImplementation "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
    testImplementation "org.junit.platform:junit-platform-launcher:$junitGradlePlatformVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoCoreVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
}

kapt {
    generateStubs = true
    useBuildCache = true
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    maven { url "https://jitpack.io" }
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

// Spec workaround AS 3 Alpha ...
// add 2 task in run config to make kotlin test working for junit
// https://stackoverflow.com/questions/44079918/android-studio-3-0-canary-1-kotlin-tests-or-java-tests-referring-to-kotlin-clas
// ...
// task copyTestClasses(type: Copy) {
//     from "build/tmp/kotlin-classes/debugUnitTest"
//     into "build/intermediates/classes/debug"
// }
//
// afterEvaluate {
//     compileDebugUnitTestSources.dependsOn copyTestClasses
// }